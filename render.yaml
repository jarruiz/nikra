# ==============================================
# üöÄ CONFIGURACI√ìN DE RENDER
# ==============================================
# Este archivo define la infraestructura en Render

services:
  # ==============================================
  # üéØ SERVICIO WEB (Backend NestJS)
  # ==============================================
  - type: web
    name: nikra-backend
    env: node
    region: frankfurt  # Frankfurt (Alemania) - √önica regi√≥n europea, √≥ptima para Espa√±a
    plan: starter  # Cambia a standard o professional seg√∫n necesites
    branch: main  # Rama de Git que se desplegar√°
    buildCommand: npm install --include=dev && npx nest build
    startCommand: npm run start:prod
    healthCheckPath: /api/docs
    
    # Variables de entorno
    envVars:
      - key: NODE_ENV
        value: production
      
      - key: PORT
        value: 3000
      
      # Base de datos (vinculada al servicio de PostgreSQL abajo)
      - key: DB_HOST
        fromDatabase:
          name: nikra-db
          property: host
      
      - key: DB_PORT
        fromDatabase:
          name: nikra-db
          property: port
      
      - key: DB_USERNAME
        fromDatabase:
          name: nikra-db
          property: user
      
      - key: DB_PASSWORD
        fromDatabase:
          name: nikra-db
          property: password
      
      - key: DB_DATABASE
        fromDatabase:
          name: nikra-db
          property: database
      
      # JWT Secrets (IMPORTANTE: Secret est√°tico para consistencia)
      - key: JWT_SECRET
        value: nikra-jwt-secret-2025-production-secure-key-xyz789
      
      - key: JWT_EXPIRES_IN
        value: 24h
      
      - key: JWT_REFRESH_SECRET
        value: nikra-refresh-secret-2025-production-secure-key-abc123
      
      - key: JWT_REFRESH_EXPIRES_IN
        value: 7d
      
      # Rate Limiting - Configuraci√≥n optimizada
      - key: RATE_LIMIT_WINDOW_MS
        value: 900000  # 15 minutos en milisegundos
      
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 1000    # 1000 requests por ventana (66.7 req/min)
      
      # CORS - Or√≠genes permitidos (separados por comas)
      - key: ALLOWED_ORIGINS
        value: https://ccaceuta.com,https://www.ccaceuta.com,https://nikra-front.vercel.app,https://nikra-backend.onrender.com,https://sorteos.centrocomercialabiertodeceuta.es,http://localhost:3000,http://localhost:4200
      
      # Gmail OAuth - Configuraci√≥n para env√≠o de emails
      - key: GMAIL_CLIENT_ID
        value: ""  # Configurar en Render Dashboard
      
      - key: GMAIL_CLIENT_SECRET
        value: ""  # Configurar en Render Dashboard
      
      - key: GMAIL_REFRESH_TOKEN
        value: ""  # TODO: Configurar refresh token obtenido mediante OAuth2 flow
      
      - key: GMAIL_USER_EMAIL
        value: soporte@ccaceuta.com
      
      - key: FRONTEND_RESET_URL
        value: https://sorteos.centrocomercialabiertodeceuta.es/reset-password
      
      - key: RESET_TOKEN_EXPIRES_IN
        value: 3600000  # 1 hora en milisegundos
    
    # Disco persistente para archivos subidos (configurado manualmente en el dashboard de Render)
    # En el dashboard de Render, ve a Settings > Disks y configura:
    # - Name: uploads
    # - Mount Path: /app/uploads
    # - Size: 10 GB

# ==============================================
# üóÑÔ∏è BASE DE DATOS POSTGRESQL
# ==============================================
databases:
  - name: nikra-db
    databaseName: nikra_db
    user: nikra_user
    # Sin especificar 'plan' - Render usar√° el plan por defecto disponible
    region: frankfurt  # Frankfurt - IMPORTANTE: Debe ser la misma regi√≥n que el servicio web
    ipAllowList: []  # Vac√≠o = accesible solo desde servicios de Render

